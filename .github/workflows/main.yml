name: deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependecies
        run: npm ci --ignore-scripts

      - name: Build
        run: npm run build

      - name: Compress Files
        run: zip --symlinks -r fi-store.zip .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{vars.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{vars.AWS_REGION}}

      - name: Install Elastic Beanstalk CLI
        run: |
          sudo apt-get install -y python3-pip
          pip3 install awsebcli --upgrade --user
          echo 'export PATH="$HOME/.local/bin:$PATH"' >> $HOME/.bashrc
          source $HOME/.bashrc

      - name: Init Elastic Beanstalk
        run: echo "n" | eb init f1-oficial-store-api --region ${{vars.AWS_REGION}}

      - name: Get Secrets from AWS Secrets Manager
        uses: aws-actions/aws-secrets-manager-get-secret-value@v4
        with:
          secret-id: ${{ secrets.SECRET_MANAGER_SECRET_ID }}
          region: ${{ vars.AWS_REGION }}
        id: get-secrets

      - name: Create .env file
        run: |
          echo "DB_NAME=$(echo ${{ steps.get-secrets.outputs.secretString }} | jq -r '.DB_NAME')" > .env
          echo "DB_PASSWORD=$(echo ${{ steps.get-secrets.outputs.secretString }} | jq -r '.DB_PASSWORD')" >> .env
          echo "DB_USER=$(echo ${{ steps.get-secrets.outputs.secretString }} | jq -r '.DB_USER')" >> .env
          echo "DB_PORT=$(echo ${{ steps.get-secrets.outputs.secretString }} | jq -r '.DB_PORT')" >> .env
          echo "DB_HOST=$(echo ${{ steps.get-secrets.outputs.secretString }} | jq -r '.DB_HOST')" >> .env

      - name: Deploy to Elastic Beanstalk
        run: eb deploy F1-oficial-store-api-dev --staged --label f1-store-api-${{github.event.repository.pushed_at}}
